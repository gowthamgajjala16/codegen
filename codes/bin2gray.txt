module binary_to_gray #(
    parameter WIDTH = 16  // Default width is 16-bit
)(
    input  wire [WIDTH-1:0] binary_in,  // Binary input
    output wire [WIDTH-1:0] gray_out    // Gray code output
);

    // MSB remains the same in Gray code
    assign gray_out[WIDTH-1] = binary_in[WIDTH-1];

    // Internal logic: XOR each bit with the next higher bit
    genvar i;
    generate
        for (i = WIDTH-2; i >= 0; i = i - 1) begin : gray_loop
            assign gray_out[i] = binary_in[i+1] ^ binary_in[i];
        end
    endgenerate

endmodule
